{"version":3,"sources":["components/NavBar.js","images/chris.jpg","redux/action-creators/index.js","pages/Cart.js","pages/Home.js","images/chris-tee.png","images/chris-coffee.png","images/chris-mouse.png","images/adidas_x_chris.png","images/chris_mask.png","pages/Shop.js","pages/products/Shirt.js","pages/products/Mug.js","pages/products/Mouse.js","pages/products/Mask.js","pages/products/Shoe.js","pages/Checkout.js","pages/Confirmation.js","App.js","redux/reducers/cartReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["NavBar","Navbar","className","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","to","Link","addCart","item","dispatch","type","payload","removeFromCart","index","emptyCart","Cart","state","useSelector","useState","cart","cartTotal","quantity","setTotal","useDispatch","bindActionCreators","actionCreators","itemCount","Row","Col","Image","style","src","logo","roundedCircle","items","map","Card","Body","Title","Text","Math","round","price","Button","onClick","Home","Shop","md","Img","chrisTee","size","chrisCoffee","chrisMouse","adidasChris","maskChris","Shirt","setQuantity","setSize","Form","Label","FormControl","onChange","event","target","value","as","InputGroup","intValue","parseInt","isNaN","min","message","cartCount","i","length","toast","error","info","itemName","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notify","newestOnTop","rtl","pauseOnFocusLoss","Mug","Mouse","Mask","Shoe","Checkout","Group","controlId","Control","placeholder","Confirmation","App","path","exact","component","cartReducer","stateCopy","action","indexValue","push","splice","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f84b941c.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst NavBar= () =>{\n  return (\n  <div>\n  <Navbar className=\"mb-5\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  <Container>\n  <Navbar.Brand href=\"#home\">Chris Shop</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"me-auto\">\n      <LinkContainer to=\"/react-redux-store/home\">\n        <Nav.Link>Home</Nav.Link>\n      </LinkContainer>\n      <LinkContainer to=\"/react-redux-store/shop\">\n        <Nav.Link>Shop</Nav.Link>\n      </LinkContainer>\n      <LinkContainer to=\"/react-redux-store/cart\">\n        <Nav.Link>Cart</Nav.Link>\n      </LinkContainer>\n    </Nav>\n  </Navbar.Collapse>\n  </Container>\n  </Navbar>\n  </div>\n  );\n}\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/chris.0a6f0255.jpg\";","export const addCart = (item) => {\n    return (dispatch) => {\n        dispatch({\n            type: \"addToCart\",\n            payload: item\n        })\n    }\n}\n\nexport const removeFromCart = (index) => {\n    return (dispatch) => {\n        dispatch({\n            type: \"removeFromCart\",\n            payload: index\n        })\n    }\n}\n\nexport const emptyCart = () => {\n    return (dispatch) => {\n        dispatch({\n            type: \"emptyCart\",\n            payload: \"\"\n        })\n    }\n}","import React, {useState} from 'react';\nimport logo from './../images/chris.jpg'; \nimport { useSelector, useDispatch } from \"react-redux\"\nimport Container from \"react-bootstrap/Container\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button, Image, Row, Col, Card } from 'react-bootstrap';\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../redux/index\"\n\nconst Cart = () =>{\n  const state = useSelector((state) => state);\n  const [quantity, setTotal] = useState(state.cart.cartTotal);\n  let body;\n  const dispatch = useDispatch()\n  const { removeFromCart } = bindActionCreators(actionCreators, dispatch)\n  if (state.cart.itemCount > 0) {\n    body = (\n    <div>\n    <Container>\n      <Row className=\"mb-4 text-center\">\n        <Col>\n        <Image className=\"mb-3\" style={{\"width\":\"175px\", \"height\":\"175px\"}} src={logo} roundedCircle />\n          <h2 className=\"mb-4 text-center\">Your cart contains {state.cart.itemCount} item(s)</h2>\n          {state.cart.items.map((item,index) => { \n            return(\n            <div>\n              <Card className=\"mb-3 text-center\" key={index}>\n                <Card.Body>\n                  <Card.Title>\n                    {item.item}\n                  </Card.Title>\n                  <Card.Text>\n                    Price: {Math.round(item.price * 100) / 100} \n                  </Card.Text>\n                  <Card.Text>\n                    Quantity: {item.quantity}\n                  </Card.Text>\n                  <Button onClick={() => { removeFromCart(index); setTotal(state.cart.cartTotal)}}>Remove</Button>\n                </Card.Body>\n              </Card>\n            </div>\n            )}\n          )}\n          <h3 className=\"mb-4 text-center\" >Item Total: ${Math.round(quantity * 100) / 100}</h3>\n          <h3 className=\"mb-4 text-center\" >Shipping: $10</h3>\n          <LinkContainer to=\"/react-redux-store/checkout\">\n            <Button variant=\"success\">Checkout</Button>\n          </LinkContainer>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n    );\n  } else {\n    body = (\n    <div>\n    <Container>\n    <h3>Cart</h3>\n    <div>\n    <p>Your cart is empty.</p>\n    </div>\n    </Container>\n    </div>\n    );\n  }\n  return (\n    body\n  );\n}\nexport default Cart;","import React from 'react';\nimport logo from './../images/chris.jpg'; \nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Home = () =>{\n  return (\n    <div>\n      <Container className=\"mb-3 text-center\">\n        <Image className=\"mb-3\" style={{\"width\":\"175px\", \"height\":\"175px\"}} src={logo} roundedCircle />\n        <Card className=\"mb-3 text-center\">\n        <Card.Body>\n              <Card.Title>\n                Welcome to Chris Shop!\n              </Card.Title>\n              <Card.Text>\n                Your one stop shop for everything Chris\n              </Card.Text>\n              <Card.Text>\n                \"The must luxurious shop on the internet\" -Chris\n              </Card.Text>\n        </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\nexport default Home;","export default __webpack_public_path__ + \"static/media/chris-tee.adcb477f.png\";","export default __webpack_public_path__ + \"static/media/chris-coffee.474486b3.png\";","export default __webpack_public_path__ + \"static/media/chris-mouse.00429df2.png\";","export default __webpack_public_path__ + \"static/media/adidas_x_chris.9d9f89f9.png\";","export default __webpack_public_path__ + \"static/media/chris_mask.c224f404.png\";","import React from 'react';\nimport chrisTee from './../images/chris-tee.png'; \nimport chrisCoffee from './../images/chris-coffee.png'; \nimport chrisMouse from './../images/chris-mouse.png';\nimport adidasChris from './../images/adidas_x_chris.png'; \nimport maskChris from './../images/chris_mask.png'; \nimport { Container, Card, Col, Row, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nconst Shop = () =>{\n  return (\n    <div>\n      <div>\n        <Container className=\"mb-3\">\n        <Row>\n          <Col md>\n          <Card className=\"mb-3 text-center\">\n            <Card.Img variant=\"top\"   src={chrisTee} />\n            <Card.Body>\n              <Card.Title>\n                Chris T-Shirt\n              </Card.Title>\n              <Card.Text>\n                Limited edition. While supplies last. \n              </Card.Text>\n              <LinkContainer to=\"/react-redux-store/shirt\">\n                <Button size=\"lg\">Purchase</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n          </Col>\n          <Col md> \n          <Card className=\"mb-3 text-center\">\n            <Card.Img src={chrisCoffee} />\n            <Card.Body>\n              <Card.Title>\n                Chris Mug\n              </Card.Title>\n              <Card.Text>\n                Enjoy your morning coffee in style. Supports chai too!\n              </Card.Text>\n              <LinkContainer to=\"/react-redux-store/mug\">\n                <Button size=\"lg\">Purchase</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md>\n          <Card className=\"mb-3 text-center\">\n            <Card.Img src={chrisMouse} />\n            <Card.Body>\n              <Card.Title>\n                Chris Mouse\n              </Card.Title>\n              <Card.Text>\n                All of the pro gamers have one. \n              </Card.Text>\n              <LinkContainer to=\"/react-redux-store/mouse\">\n                <Button size=\"lg\">Purchase</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n          </Col>\n          <Col md>\n          <Card className=\"mb-3 text-center\">\n            <Card.Img src={adidasChris} />\n            <Card.Body>\n              <Card.Title>\n                Adidas X Chris shoe\n              </Card.Title>\n              <Card.Text>\n                1 of 1 super rare 🔥🔥🔥\n              </Card.Text>\n              <LinkContainer to=\"/react-redux-store/shoe\">\n                <Button size=\"lg\">Purchase</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md>\n          <Card className=\"mb-3 text-center\">\n            <Card.Img src={maskChris} />\n            <Card.Body>\n              <Card.Title>\n                Chris Mask\n              </Card.Title>\n              <Card.Text>\n                Pack of 3 Chris masks. \n              </Card.Text>\n              <LinkContainer to=\"/react-redux-store/mask\">\n                <Button size=\"lg\">Purchase</Button>\n              </LinkContainer>\n            </Card.Body>\n          </Card>\n          </Col>\n        </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default Shop;","import React, { useState } from 'react';\nimport chrisTee from './../../images/chris-tee.png'; \nimport { useSelector, useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../../redux/index\"\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Form } from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Shirt = () =>{\n  const [quantity, setQuantity] = useState(0);\n  const [size, setSize] = useState(\"S\");\n\n  const handleInput = event => {\n    let intValue = parseInt(event.target.value);\n    if(!isNaN(intValue)) {\n      setQuantity(intValue);  \n    }\n  };\n\n\n  const notify = (message) => { \n    let cartCount = 0;\n    for (let i = 0; i < state.cart.items.length; i++) {\n      if (state.cart.items[i].item === \"Chris Shirt(Size: \"+ size +\")\") {\n        cartCount = state.cart.items[i].quantity;\n        if (cartCount >= 100) {\n          toast.error(\"Error: Out of stock.\");\n          return;\n        }\n      }\n    }\n    if (message > 100) {\n      toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n    }\n    else if (message > 1) {\n      if ((message + cartCount) > 100) {\n        toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n        return;\n      }\n      addCart({itemName: \"Chris Shirt(Size: \" + size + \")\", quantity: message, price: 8999.99})\n      toast.success(\"Added \" + quantity + \" Chris Shirts (Size: \" + size + \") to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n    else if (message === 1) {\n      addCart({itemName: \"Chris Shirt(Size: \" + size + \")\", quantity: message, price: 8999.99})\n      toast.success(\"Added 1 Chris Shirt (Size: \" + size + \") to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n  }\n\n\n  const handleChange = event => {\n    setSize(event.target.value);\n  };\n\n\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch()\n  const { addCart } = bindActionCreators(actionCreators, dispatch)\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <Card className=\"mb-3 text-center\">\n              <Card.Img variant=\"top\"   src={chrisTee} />\n              <Card.Body>\n                <Card.Title>\n                  Chris T-Shirt\n                </Card.Title>\n                <Card.Text>\n                  Yes, you can finally have Chris on your T-shirt. Order now while supplies last. \n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n        <Col className=\"mb-3 text-center\">\n            <Form.Label className=\"mb-3\">Price: $8999.99</Form.Label>\n            <FormControl onChange={handleChange} className=\"mb-3\" as=\"select\" aria-label=\"Default select example\">\n                <option value=\"S\">Small</option>\n                <option value=\"M\">Medium</option>\n                <option value=\"L\">Large</option>\n                <option value=\"XL\">X-Large</option>\n                <option value=\"XXL\">XX-Large</option>\n              </FormControl>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Quantity: </InputGroup.Text>\n                <FormControl onChange={handleInput} type=\"number\" min=\"1\"/>\n            </InputGroup>    \n            <Button variant='success' onClick={() => { notify(quantity);}}>ADD TO CART</Button>\n          </Col>\n          <Col>\n          <ToastContainer\n          position=\"top-right\"\n          autoClose={2500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />      \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Shirt;","import React, { useState } from 'react';\nimport chrisCoffee from './../../images/chris-coffee.png'; \nimport { useSelector, useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../../redux/index\"\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Mug = () =>{\n  const [quantity, setQuantity] = useState(0);\n  const handleInput = event => {\n    let intValue = parseInt(event.target.value);\n    if(!isNaN(intValue)) {\n      setQuantity(intValue);  \n    }\n  };\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch()\n  const { addCart } = bindActionCreators(actionCreators, dispatch)\n \n  const notify = (message) => { \n    let cartCount = 0;\n    for (let i = 0; i < state.cart.items.length; i++) {\n      if (state.cart.items[i].item === \"Chris Mug\") {\n        cartCount = state.cart.items[i].quantity;\n        if (cartCount >= 100) {\n          toast.error(\"Error: Out of stock.\");\n          return;\n        }\n      }\n    }\n    if (message > 100) {\n      toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n    }\n    else if (message > 1) {\n      if ((message + cartCount) > 100) {\n        toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n        return;\n      }\n      addCart({itemName: \"Chris Mug\", quantity: message, price: 999.99})\n      toast.success(\"Added \" + quantity + \" Chris Mugs to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    else if (message === 1) {\n      addCart({itemName: \"Chris Mug\", quantity: message, price: 999.99})\n      toast.success(\"Added 1 Chris Mug to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <Card className=\"mb-3 text-center\">\n              <Card.Img variant=\"top\"   src={chrisCoffee} />\n              <Card.Body>\n                <Card.Title>\n                  Chris Mug\n                </Card.Title>\n                <Card.Text>\n                  Need a quality mug? This is the mug for you.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n        <Col className=\"mb-3 text-center\">\n            <Form.Label className=\"mb-3\">Price: $999.99</Form.Label>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Quantity: </InputGroup.Text>\n                <FormControl onChange={handleInput} type=\"number\"/>\n            </InputGroup>    \n            <Button variant='success' onClick={() => {notify(quantity);}}>ADD TO CART</Button>\n          </Col>\n          <Col>\n          <ToastContainer\n          position=\"top-right\"\n          autoClose={2500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />          \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Mug;","import React, { useState } from 'react';\nimport chrisMouse from './../../images/chris-mouse.png';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../../redux/index\"\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Mouse = () =>{\n  const [quantity, setQuantity] = useState(0);\n  const handleInput = event => {\n    let intValue = parseInt(event.target.value);\n    if(!isNaN(intValue)) {\n      setQuantity(intValue);  \n    }\n  };\n  const notify = (message) => { \n    let cartCount = 0;\n    for (let i = 0; i < state.cart.items.length; i++) {\n      if (state.cart.items[i].item === \"Chris Mouse\") {\n        cartCount = state.cart.items[i].quantity;\n        if (cartCount >= 100) {\n          toast.error(\"Error: Out of stock.\");\n          return;\n        }\n      }\n    }\n    if (message > 100) {\n      toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n    }\n    else if (message > 1) {\n      if ((message + cartCount) > 100) {\n        toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n        return;\n      }\n      addCart({itemName: \"Chris Mouse\", quantity: message, price: 3999.99})\n      toast.success(\"Added \" + quantity + \" Chris Mouse to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n    else if (message === 1) {\n      addCart({itemName: \"Chris Mouse\", quantity: message, price: 3999.99})\n      toast.success(\"Added 1 Chris Mouse to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n  }\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch()\n  const { addCart } = bindActionCreators(actionCreators, dispatch)\n  return (\n    <div>\n\n      <Container>\n        <Row>\n          <Col>\n            <Card className=\"mb-3 text-center\">\n              <Card.Img variant=\"top\"   src={chrisMouse} />\n              <Card.Body>\n                <Card.Title>\n                  Chris Mouse\n                </Card.Title>\n                <Card.Text>\n                  Are you a hardcore gamer? Looking to go MLG pro? Buy this mouse. \n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n        <Col className=\"mb-3 text-center\">\n            <Form.Label className=\"mb-3\">Price: $3999.99</Form.Label>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Quantity: </InputGroup.Text>\n                <FormControl onChange={handleInput} type=\"number\" min=\"1\"/>\n            </InputGroup>    \n            <Button variant='success' onClick={() => { notify(quantity);}}>ADD TO CART</Button>\n          </Col>\n          <Col>\n          <ToastContainer\n          position=\"top-right\"\n          autoClose={2500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />      \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Mouse;","import React, { useState } from 'react';\nimport maskChris from './../../images/chris_mask.png';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../../redux/index\"\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Mask = () =>{\n  const [quantity, setQuantity] = useState(0);\n  const handleInput = event => {\n    let intValue = parseInt(event.target.value);\n    if(!isNaN(intValue)) {\n      setQuantity(intValue);  \n    }\n  };\n  const notify = (message) => { \n    let cartCount = 0;\n    for (let i = 0; i < state.cart.items.length; i++) {\n      if (state.cart.items[i].item === \"Chris Mask\") {\n        cartCount = state.cart.items[i].quantity;\n        if (cartCount >= 100) {\n          toast.error(\"Error: Out of stock.\");\n          return;\n        }\n      }\n    }\n    if (message > 100) {\n      toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n    }\n    else if (message > 1) {\n      if ((message + cartCount) > 100) {\n        toast.info(\"Only \" + (100-cartCount) + \" in stock.\");\n        return;\n      }\n      addCart({itemName: \"Chris Mask\", quantity: message, price: 99.99})\n      toast.success(\"Added \" + quantity + \" Chris Masks to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n    else if (message === 1) {\n      addCart({itemName: \"Chris Mask\", quantity: message, price: 99.99})\n      toast.success(\"Added 1 Chris Mask to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n  }\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch()\n  const { addCart } = bindActionCreators(actionCreators, dispatch)\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <Card className=\"mb-3 text-center\">\n              <Card.Img variant=\"top\"   src={maskChris} />\n              <Card.Body>\n                <Card.Title>\n                  Chris Mask\n                </Card.Title>\n                <Card.Text>\n                  Need to wear a mask but also want a hot fashion statement? Order a Chris mask now.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n        <Col className=\"mb-3 text-center\">\n            <Form.Label className=\"mb-3\">Price: $99.99</Form.Label>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Quantity: </InputGroup.Text>\n                <FormControl onChange={handleInput} type=\"number\" min=\"1\"/>\n            </InputGroup>    \n            <Button variant='success' onClick={() => { notify(quantity);}}>ADD TO CART</Button>\n          </Col>\n          <Col>\n          <ToastContainer\n          position=\"top-right\"\n          autoClose={2500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />      \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Mask;","import React, { useState } from 'react';\nimport adidasChris from './../../images/adidas_x_chris.png'; \nimport { useSelector, useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../../redux/index\"\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { Form } from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst Shoe = () =>{\n  const [quantity, setQuantity] = useState(0);\n  const [size, setSize] = useState(\"5\");\n\n  const handleInput = event => {\n    let intValue = parseInt(event.target.value);\n    if(!isNaN(intValue)) {\n      setQuantity(intValue);  \n    }\n  };\n  const notify = (message) => { \n    for (let i = 0; i < state.cart.items.length; i++) {\n      if (state.cart.items[i].item === \"Chris Shoe(Size: \"+ size +\")\") {\n        toast.error(\"Error: Out of stock.\");\n        return;\n      }\n    }\n    if (message > 1) {\n      toast.info(\"Only 1 in stock.\");\n    }\n    else if (message === 1) {\n      addCart({itemName: \"Chris Shoe(Size: \" + size + \")\", quantity: quantity, price: 19999.99})\n      toast.success(\"Added 1 Chris Shoe (Size: \" + size + \") to the cart\", {\n        position: \"top-right\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        });\n    }\n  }\n  const handleChange = event => {\n    setSize(event.target.value);\n  };\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch()\n  const { addCart } = bindActionCreators(actionCreators, dispatch)\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <Card className=\"mb-3 text-center\">\n              <Card.Img variant=\"top\"   src={adidasChris} />\n              <Card.Body>\n                <Card.Title>\n                  Adidas X Chris Official shoes\n                </Card.Title>\n                <Card.Text>\n                  The offical Chris X Adidas shoe collab. 1 of 1. Super Rare.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          </Col>\n        </Row>\n        <Row>\n        <Col className=\"mb-3 text-center\">\n            <Form.Label className=\"mb-3\">Price: $19999.99</Form.Label>\n            <FormControl onChange={handleChange} className=\"mb-3\" as=\"select\" aria-label=\"Default select example\">\n                <option value=\"5\">Size: 5</option>\n                <option value=\"5.5\">Size: 5.5</option>\n                <option value=\"6\">Size: 6</option>\n                <option value=\"6.5\">Size: 6.5</option>\n                <option value=\"7\">Size: 7</option>\n                <option value=\"7.5\">Size: 7.5</option>\n                <option value=\"8\">Size: 8</option>\n                <option value=\"8.5\">Size: 8.5</option>\n                <option value=\"9\">Size: 9</option>\n                <option value=\"9.5\">Size: 9.5</option>\n                <option value=\"10\">Size: 8</option>\n                <option value=\"10.5\">Size: 10.5</option>\n                <option value=\"11\">Size: 11</option>\n                <option value=\"11.5\">Size: 11.5</option>\n                <option value=\"12\">Size: 12</option>\n                <option value=\"12.5\">Size: 12.5</option>\n                <option value=\"13\">Size: 13</option>\n              </FormControl>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text>Quantity: </InputGroup.Text>\n                <FormControl onChange={handleInput} type=\"number\" min=\"1\"/>\n            </InputGroup>    \n            <Button variant='success' onClick={() => { notify(quantity);}}>ADD TO CART</Button>\n          </Col>\n          <Col>\n          <ToastContainer\n          position=\"top-right\"\n          autoClose={2500}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />      \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Shoe;","import React from 'react';\nimport { useSelector } from \"react-redux\"\nimport { Container, Form, Button, Card } from \"react-bootstrap\";\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Checkout = () =>{\n  const state = useSelector((state) => state);\n  \n  return (\n    <div>\n      <div>\n        <Container className=\"mb-5\">\n        <h1 className=\"mb-4\">Checkout</h1>\n        <Form className=\"mb-4\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Group className=\"mb-4\" controlId=\"formEmail\">\n                <Form.Control type=\"email\" placeholder=\"example@example.com\" />\n            </Form.Group>\n            <Form.Label>Shipping Information</Form.Label>\n            <Form.Group className=\"mb-4\" controlId=\"formShipping\"> \n                <Form.Text>First Name</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"John\" />\n                <Form.Text>Last Name</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"Smith\" />\n                <Form.Text>Phone Number</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"(123)-123-1234\" />\n                <Form.Text>Address</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"12345 North Chris Street\" />\n                <Form.Text>State/Province</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"Hawaii\" />\n                <Form.Text>Zip/Postal Code</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"12345\" />\n                <Form.Text>Country</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"USA\" />\n            </Form.Group>\n            <Form.Label>Billing Information</Form.Label>\n            <Form.Group className=\"mb-4\" controlId=\"formBilling\"> \n                <Form.Text>Card Number</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"xxxx-xxxx-xxxx-xxxx\" />\n                <Form.Text>Expiry Date</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"MM/DD/YYYY\" />\n                <Form.Text>Verification</Form.Text>\n                <Form.Control type=\"text\" placeholder=\"CVV\" />\n            </Form.Group>\n        </Form>\n        <Card className=\"mb-4\">\n        <Card.Body>\n              <Card.Title className=\"mb-3\">\n                Total\n              </Card.Title>\n              <Card.Text>\n                Subtotal: ${Math.round(state.cart.cartTotal * 100) / 100}\n              </Card.Text>\n              <Card.Text>\n                Shipping: $10\n              </Card.Text>\n              <Card.Text>\n                Taxes: ${Math.round((state.cart.cartTotal * .0625) * 100) / 100}\n              </Card.Text>\n              <Card.Text>\n                Total: ${Math.round((state.cart.cartTotal + (state.cart.cartTotal * .0625) + 10) * 100) / 100}\n              </Card.Text>\n        </Card.Body>\n        </Card>\n        <LinkContainer to=\"/react-redux-store/confirmation\">\n            <Button>Confirm Purchase</Button>\n        </LinkContainer>\n        <br></br>\n        </Container>\n      </div>\n    </div>\n  );\n}\nexport default Checkout;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport {actionCreators } from \"./../redux/index\"\n\n\nconst Confirmation = () =>{\n  const dispatch = useDispatch()\n  const { emptyCart } = bindActionCreators(actionCreators, dispatch)\n  emptyCart();\n  return (\n    <div>\n      <Container>\n      <h3>Order Confirmed!</h3>\n      <div>\n        <p>Thank you for your order from Chris Shop.</p>\n      </div>\n      </Container>\n    </div>\n  );\n}\nexport default Confirmation;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\"\nimport Cart from \"./pages/Cart\"\nimport Home from \"./pages/Home\"\nimport Shop from \"./pages/Shop\"\nimport Shirt from \"./pages/products/Shirt\"\nimport Mug from \"./pages/products/Mug\"\nimport Mouse from \"./pages/products/Mouse\"\nimport Mask from \"./pages/products/Mask\"\nimport Shoe from \"./pages/products/Shoe\"\nimport Checkout from \"./pages/Checkout\"\nimport Confirmation from \"./pages/Confirmation\"\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path='/react-redux-store/' exact component={Home} />\n        <Route path='/react-redux-store/home' exact component={Home} />\n        <Route path='/react-redux-store/shop' component={Shop} />\n        <Route path='/react-redux-store/cart' component={Cart} />\n        <Route path='/react-redux-store/shirt' component={Shirt} />\n        <Route path='/react-redux-store/mug' component={Mug} />\n        <Route path='/react-redux-store/mouse' component={Mouse} />\n        <Route path='/react-redux-store/mask' component={Mask} />\n        <Route path='/react-redux-store/shoe' component={Shoe} />\n        <Route path='/react-redux-store/checkout' component={Checkout} />\n        <Route path='/react-redux-store/confirmation' component={Confirmation} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const cartReducer = (state = {itemCount: 0, items: [], cartTotal: 0}, action) => {\n    let stateCopy;\n    switch (action.type) {\n        case \"addToCart\":\n            stateCopy = state;\n            stateCopy.itemCount += action.payload.quantity;\n            let indexValue = -1;\n            for(let i = 0; i < stateCopy.items.length; i++) {\n                if (stateCopy.items[i].item === action.payload.itemName) {\n                    indexValue = i;\n                    break;\n                }\n            }\n            if (indexValue >= 0) {\n                stateCopy.items[indexValue].quantity += action.payload.quantity;\n            } else {\n                stateCopy.items.push({\"item\": action.payload.itemName, \n                 \"quantity\": action.payload.quantity, \"price\": action.payload.price});\n            }\n            stateCopy.cartTotal += action.payload.price * action.payload.quantity;\n            return stateCopy;\n        case \"removeFromCart\":\n            stateCopy = state;\n            stateCopy.itemCount -= stateCopy.items[action.payload].quantity;\n            stateCopy.cartTotal -= stateCopy.items[action.payload].quantity * stateCopy.items[action.payload].price;\n            stateCopy.items.splice(action.payload, 1);\n            return stateCopy;\n        case \"emptyCart\":\n            stateCopy = state;\n            stateCopy.itemCount = 0;\n            stateCopy.items = [];\n            stateCopy.cartTotal = 0;\n            return stateCopy;\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;","import { combineReducers } from \"redux\"\nimport cartReducer from \"./cartReducer\";\n\nconst reducers = combineReducers({\n    cart: cartReducer\n})\n\nexport default reducers;","import { createStore, applyMiddleware } from \"redux\"\nimport reducers from \"./reducers/index\"\nimport thunk from \"redux-thunk\"\nexport const store = createStore(\n    reducers,\n    {},\n    applyMiddleware(thunk)\n)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/store\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}